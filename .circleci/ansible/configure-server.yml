---
- name: "configuration play."
  hosts: web
  user: ubuntu
  become: true
  become_method: sudo
  become_user: root
  gather_facts: false
  vars:
    - ansible_python_interpreter: /usr/bin/python3
    - ansible_host_key_checking: false
    - ansible_stdout_callback: yaml
    # Get the environment variables from CircleCI and add to the EC2 instance
  environment:
    - TYPEORM_CONNECTION: "{{ lookup('env', 'TYPEORM_CONNECTION')}}"
    - TYPEORM_ENTITIES: "{{ lookup('env', 'TYPEORM_ENTITIES')}}"
    - TYPEORM_HOST: "{{ lookup('env', 'TYPEORM_HOST')}}"
    - TYPEORM_PORT: "{{ lookup('env', 'TYPEORM_PORT') }}"
    - TYPEORM_USERNAME: "{{ lookup('env', 'TYPEORM_USERNAME')}}"
    - TYPEORM_PASSWORD: "{{ lookup('env', 'TYPEORM_PASSWORD')}}"
    - TYPEORM_DATABASE: "{{ lookup('env', 'TYPEORM_DATABASE')}}"
    - TYPEORM_MIGRATIONS: "{{ lookup('env', 'TYPEORM_MIGRATIONS')}}"
    - TYPEORM_MIGRATIONS_DIR: "{{ lookup('env', 'TYPEORM_MIGRATIONS_DIR')}}"

  pre_tasks:
    - name: "wait 600 seconds for target connection to become reachable/usable."
      # Your code here
      wait_for_connection:
        delay: 5
        timeout: 600

    - name: "install python for Ansible."
      # Your code here
      become: yes
      apt:
        name: python3
        state: latest

    - name: "save environment variables permenetly"
      shell: |
        sudo echo "TYPEORM_CONNECTION={{ lookup('env', 'TYPEORM_CONNECTION')}}" >> /etc/environment
        sudo echo "TYPEORM_ENTITIES={{ lookup('env', 'TYPEORM_ENTITIES')}}" >> /etc/environment
        sudo echo "TYPEORM_HOST={{ lookup('env', 'TYPEORM_HOST')}}" >> /etc/environment
        sudo echo "TYPEORM_PORT={{ lookup('env', 'TYPEORM_PORT') }}" >> /etc/environment
        sudo echo "TYPEORM_USERNAME={{ lookup('env', 'TYPEORM_USERNAME')}}" >> /etc/environment
        sudo echo "TYPEORM_PASSWORD={{ lookup('env', 'TYPEORM_PASSWORD')}}" >> /etc/environment
        sudo echo "TYPEORM_DATABASE={{ lookup('env', 'TYPEORM_DATABASE')}}" >> /etc/environment
        sudo echo "TYPEORM_MIGRATIONS={{ lookup('env', 'TYPEORM_MIGRATIONS')}}" >> /etc/environment
        sudo echo "TYPEORM_MIGRATIONS_DIR={{ lookup('env', 'TYPEORM_MIGRATIONS_DIR')}}" >> /etc/environment
        sudo echo "NODE_ENV=production" >> /etc/environment
        source /etc/environment
        cat /etc/environment
  roles:
    # Your code here
    - configure-server
    - configure-prometheus-node-exporter
